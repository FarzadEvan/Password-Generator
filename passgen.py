# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'passgen.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtGui import QIcon
import random
from PyQt5.QtWidgets import QMessageBox,QWidget, QMainWindow
import pyperclip as pc
import pygame
from pygame.locals import *
from pygame import mixer


class Uii_MainWindow(QWidget):
    def __init__(self):
        super().__init__()
    
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(627, 315)
        MainWindow.setCursor(QtGui.QCursor(QtCore.Qt.ArrowCursor))
        MainWindow.setAutoFillBackground(False)
        MainWindow.setStyleSheet("background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:0 #a73737, stop:1 #7a2828);")
        MainWindow.setDocumentMode(False)
        MainWindow.setWindowIcon(QIcon("/Users/farzad/Downloads/passicon.png"))
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.genbutt = QtWidgets.QPushButton(self.centralwidget)
        self.genbutt.setGeometry(QtCore.QRect(250, 250, 141, 41))
        font = QtGui.QFont()
        font.setFamily("Copperplate")
        font.setPointSize(19)
        font.setItalic(True)
        font.setUnderline(False)
        font.setStrikeOut(False)
        font.setStyleStrategy(QtGui.QFont.PreferDefault)
        self.genbutt.setFont(font)
        self.genbutt.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.genbutt.setTabletTracking(False)
        self.genbutt.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.genbutt.setAutoFillBackground(False)
        self.genbutt.setStyleSheet("QPushButton{\n"
"background-color:rgb(0, 0, 0) ;\n"
"    \n"
"color: rgb(255, 42, 50);\n"
"border-radius: 20px;\n"
"}")
        self.genbutt.setIconSize(QtCore.QSize(0, 0))
        self.genbutt.setAutoDefault(False)
        self.genbutt.setFlat(False)
        self.genbutt.setObjectName("genbutt")
        self.numcheck = QtWidgets.QCheckBox(self.centralwidget)
        self.numcheck.setGeometry(QtCore.QRect(250, 40, 131, 31))
        font = QtGui.QFont()
        font.setFamily("Copperplate")
        font.setPointSize(20)
        font.setBold(True)
        font.setWeight(75)
        self.numcheck.setFont(font)
        self.numcheck.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.numcheck.setStyleSheet("QCheckBox::indicator\n"
"{\n"
"background-color : rgb(174, 255, 214);\n"
"border-radius:12px;\n"
"width:25px;\n"
"height:25px;\n"
"\n"
"\n"
"}\n"
"\n"
"\n"
"QCheckBox::indicator:checked\n"
"{\n"
"background-color: rgb(42, 255, 0);\n"
"background-image:url(/Users/farzad/Downloads/cc.png)\n"
"\n"
"}\n"
"\n"
"QCheckBox{\n"
"background-color: none;\n"
"}")
        self.numcheck.setObjectName("numcheck")
        self.charcheck = QtWidgets.QCheckBox(self.centralwidget)
        self.charcheck.setGeometry(QtCore.QRect(420, 40, 161, 31))
        font = QtGui.QFont()
        font.setFamily("Copperplate")
        font.setPointSize(20)
        font.setBold(True)
        font.setWeight(75)
        self.charcheck.setFont(font)
        self.charcheck.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.charcheck.setStyleSheet("QCheckBox::indicator\n"
"{\n"
"background-color : rgb(174, 255, 214);\n"
"border-radius:12px;\n"
"width:25px;\n"
"height:25px;\n"
"\n"
"\n"
"}\n"
"\n"
"\n"
"QCheckBox::indicator:checked\n"
"{\n"
"background-color: rgb(42, 255, 0);\n"
"background-image:url(/Users/farzad/Downloads/cc.png)\n"
"\n"
"}\n"
"\n"
"QCheckBox{\n"
"background-color: none;\n"
"border-radius:5px;\n"
"}")
        self.charcheck.setTristate(False)
        self.charcheck.setObjectName("charcheck")
        self.spinBox = QtWidgets.QSpinBox(self.centralwidget)
        self.spinBox.setGeometry(QtCore.QRect(340, 110, 51, 31))
        font = QtGui.QFont()
        font.setFamily(".AppleSystemUIFont")
        font.setPointSize(20)
        font.setUnderline(False)
        self.spinBox.setFont(font)
        self.spinBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.spinBox.setFocusPolicy(QtCore.Qt.WheelFocus)
        self.spinBox.setStyleSheet("QSpinBox::up-arrow\n"
"{\n"
"background-image : url(/Users/farzad/Downloads/upt.png);\n"
"border-radius: 5px;\n"
"    background-color: none;\n"
"}\n"
"\n"
"QSpinBox::down-arrow\n"
"{\n"
"background-image : url(/Users/farzad/Downloads/down.png);\n"
"object-position:center;\n"
"border-radius: 5px;\n"
"    background-color: none;\n"
"\n"
"}\n"
"QSpinBox{\n"
"background-color: none;\n"
"border-radius: 10px;\n"
"border: 3px solid rgb(0, 0, 0);\n"
"\n"
"}\n"
"      \n"
"\n"
"    \n"
"    \n"
"\n"
"")
        self.spinBox.setWrapping(False)
        self.spinBox.setFrame(True)
        self.spinBox.setAlignment(QtCore.Qt.AlignCenter)
        self.spinBox.setReadOnly(False)
        self.spinBox.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.spinBox.setSpecialValueText("")
        self.spinBox.setAccelerated(False)
        self.spinBox.setCorrectionMode(QtWidgets.QAbstractSpinBox.CorrectToNearestValue)
        self.spinBox.setMinimum(4)
        self.spinBox.setMaximum(20)
        self.spinBox.setStepType(QtWidgets.QAbstractSpinBox.DefaultStepType)
        self.spinBox.setProperty("value", 4)
        self.spinBox.setObjectName("spinBox")
        self.upbutt = QtWidgets.QPushButton(self.centralwidget)
        self.upbutt.setGeometry(QtCore.QRect(300, 90, 31, 31))
        self.upbutt.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.upbutt.setStyleSheet("background-color: none;\n"
"border-radius:5px;\n"
"\n"
"")
        self.upbutt.setText("")
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("/Users/farzad/Downloads/up.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.upbutt.setIcon(icon)
        self.upbutt.setIconSize(QtCore.QSize(30, 30))
        self.upbutt.setObjectName("upbutt")
        self.downbutt = QtWidgets.QPushButton(self.centralwidget)
        self.downbutt.setGeometry(QtCore.QRect(300, 130, 31, 31))
        self.downbutt.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.downbutt.setStyleSheet("background-color: none;\n"
"border-radius:5px;\n"
"\n"
"")
        self.downbutt.setText("")
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap("/Users/farzad/Downloads/downn.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.downbutt.setIcon(icon1)
        self.downbutt.setIconSize(QtCore.QSize(30, 30))
        self.downbutt.setObjectName("downbutt")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(20, 110, 311, 31))
        font = QtGui.QFont()
        font.setFamily("Copperplate")
        font.setPointSize(23)
        font.setBold(True)
        font.setWeight(75)
        self.label.setFont(font)
        self.label.setStyleSheet("background-color: none;")
        self.label.setObjectName("label")
        self.lineEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit.setGeometry(QtCore.QRect(90, 180, 411, 41))
        font = QtGui.QFont()
        font.setFamily("Copperplate")
        font.setPointSize(17)
        font.setBold(True)
        font.setWeight(75)
        font.setStrikeOut(False)
        font.setKerning(False)
        self.lineEdit.setFont(font)
        self.lineEdit.setStyleSheet("border-radius:15px;\n"
"background-color: none;")
        self.lineEdit.setText("")
        self.lineEdit.setFrame(False)
        self.lineEdit.setCursorPosition(0)
        self.lineEdit.setReadOnly(True)
        self.lineEdit.setCursorMoveStyle(QtCore.Qt.LogicalMoveStyle)
        self.lineEdit.setClearButtonEnabled(False)
        self.lineEdit.setObjectName("lineEdit")
        self.genbutt_2 = QtWidgets.QPushButton(self.centralwidget)
        self.genbutt_2.setGeometry(QtCore.QRect(510, 170, 51, 21))
        font = QtGui.QFont()
        font.setFamily("Copperplate")
        font.setPointSize(13)
        font.setItalic(True)
        font.setUnderline(False)
        font.setStrikeOut(False)
        font.setStyleStrategy(QtGui.QFont.PreferDefault)
        self.genbutt_2.setFont(font)
        self.genbutt_2.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.genbutt_2.setTabletTracking(False)
        self.genbutt_2.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.genbutt_2.setAutoFillBackground(False)
        self.genbutt_2.setStyleSheet("QPushButton{\n"
"background-color:rgb(255, 240, 85) ;\n"
"    \n"
"color: rgb(0, 0, 0);\n"
"border-radius: 10px;\n"
"}")
        self.genbutt_2.setIconSize(QtCore.QSize(0, 0))
        self.genbutt_2.setAutoDefault(False)
        self.genbutt_2.setFlat(False)
        self.genbutt_2.setObjectName("genbutt_2")
        self.genbutt_3 = QtWidgets.QPushButton(self.centralwidget)
        self.genbutt_3.setGeometry(QtCore.QRect(510, 210, 51, 21))
        font = QtGui.QFont()
        font.setFamily("Copperplate")
        font.setPointSize(13)
        font.setItalic(True)
        font.setUnderline(False)
        font.setStrikeOut(False)
        font.setStyleStrategy(QtGui.QFont.PreferDefault)
        self.genbutt_3.setFont(font)
        self.genbutt_3.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.genbutt_3.setTabletTracking(False)
        self.genbutt_3.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.genbutt_3.setAutoFillBackground(False)
        self.genbutt_3.setStyleSheet("QPushButton{\n"
"background-color:rgb(255, 240, 85) ;\n"
"    \n"
"color: rgb(0, 0, 0);\n"
"border-radius: 10px;\n"
"}")
        self.genbutt_3.setIconSize(QtCore.QSize(0, 0))
        self.genbutt_3.setAutoDefault(False)
        self.genbutt_3.setFlat(False)
        self.genbutt_3.setObjectName("genbutt_3")
        self.alphacheck = QtWidgets.QCheckBox(self.centralwidget)
        self.alphacheck.setGeometry(QtCore.QRect(60, 40, 151, 25))
        font = QtGui.QFont()
        font.setFamily("Copperplate")
        font.setPointSize(20)
        font.setBold(True)
        font.setWeight(75)
        self.alphacheck.setFont(font)
        self.alphacheck.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.alphacheck.setStyleSheet("QCheckBox::indicator\n"
"{\n"
"background-color : rgb(174, 255, 214);\n"
"border-radius:12px;\n"
"width:25px;\n"
"height:25px;\n"
"\n"
"\n"
"}\n"
"\n"
"\n"
"QCheckBox::indicator:checked\n"
"{\n"
"background-color: rgb(42, 255, 0);\n"
"background-image:url(/Users/farzad/Downloads/cc.png)\n"
"\n"
"}\n"
"\n"
"QCheckBox{\n"
"background-color: none;\n"
"}")
        self.alphacheck.setObjectName("alphacheck")
        self.numcheck.raise_()
        self.charcheck.raise_()
        self.spinBox.raise_()
        self.upbutt.raise_()
        self.downbutt.raise_()
        self.genbutt.raise_()
        self.label.raise_()
        self.lineEdit.raise_()
        self.genbutt_2.raise_()
        self.genbutt_3.raise_()
        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)
        self.upbutt.clicked.connect(self.spinBox.stepUp)
        self.downbutt.clicked.connect(self.spinBox.stepDown)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        self.genbutt.clicked.connect(self.passwordgen)
        self.genbutt_2.clicked.connect(self.copy)
        self.genbutt_3.clicked.connect(self.clear)

        

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "PassGen"))
        self.genbutt.setText(_translate("MainWindow", "Generate"))
        self.numcheck.setText(_translate("MainWindow", "Numbers"))
        self.charcheck.setText(_translate("MainWindow", "Charecters"))
        self.label.setText(_translate("MainWindow", "Amont of charecters:"))
        self.genbutt_2.setText(_translate("MainWindow", "COPY"))
        self.genbutt_3.setText(_translate("MainWindow", "CLEAR"))
        self.alphacheck.setText(_translate("MainWindow", "Alphabets"))



    def passwordgen (self):
        alphabet = "qwertyuiopasdfghjklzxcvbnmQWERTYUIOPASDFGHJKLZXCVBNM"
        number = "0123456789"
        char = "!@#$%&_-?"
    
             
        def check():     
            if self.numcheck.isChecked() == True and self.charcheck.isChecked() == True and self.alphacheck.isChecked() == True:
                total = alphabet + number + char
                

            elif self.numcheck.isChecked() == True and self.charcheck.isChecked() == False and self.alphacheck.isChecked() == False:
                 total = number


            elif self.alphacheck.isChecked() == True and self.numcheck.isChecked() == False and self.charcheck.isChecked() == False:
                 total = alphabet

            elif self.charcheck.isChecked() == True and self.alphacheck.isChecked() == False and self.numcheck.isChecked() == False:
                 total = char

            elif self.charcheck.isChecked() == True and self.alphacheck.isChecked() == True and self.numcheck.isChecked() == False:
                 total = char + alphabet

            elif self.charcheck.isChecked() == True and self.alphacheck.isChecked() == False and self.numcheck.isChecked() == True:
                 total = char + number

            elif self.charcheck.isChecked() == False and self.alphacheck.isChecked() == True and self.numcheck.isChecked() == True:
                 total = alphabet + number

            elif self.charcheck.isChecked() == False and self.alphacheck.isChecked() == False and self.numcheck.isChecked() == False:
                msg = QtWidgets.QMessageBox.information(self, "choose", "choose your password combination!", QMessageBox.Ok)
                if msg == QMessageBox.Ok:
                     total = number + char + alphabet

            return total
              
        total = check()

        amount = self.spinBox.text()
        amount = int(amount)

        if len(total) < amount:
            while len(total) < amount:
                total += total

        
        password = "".join(random.sample(total, amount))
        self.lineEdit.setText(password)

    def copy(self):
        text = self.lineEdit.text()
        pc.copy(text)

    def clear(self):
        msg = QtWidgets.QMessageBox.question(self, "Are you sure?", "Are you sure you want to delete this password?",QMessageBox.Yes|QMessageBox.No)
        if msg == QMessageBox.Yes:
            self.lineEdit.clear()


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Uii_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
